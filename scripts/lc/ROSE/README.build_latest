Steps to build the latest ROSE:

export INTEL_VERSION="16.0.3"
export BOOST_VERSION="1.62.0"

# Clone the repo and populate the submodules:
git clone rose-dev@rosecompiler1.llnl.gov:rose/scratch/rose
cd rose
git submodule init
git submodule update

# Name things after the ROSE version:
# Find out the latest ROSE version:
git log
export ROSE_VERSION="0.9.10.25"
cd ..
mv rose rose-${ROSE_VERSION}
cd rose-${ROSE_VERSION}

# Below, make sure line 264 looks like:
ROSE_INTEL_COMPILER_MATH_LIBS = -L/usr/tce/packages/intel/intel-${INTEL_VERSION}/lib/intel64 -limf -lirng -lintlc -lsvml
gedit config/Makefile.for.ROSE.includes.and.libs

run_and_log build

cd ..
mkdir rose-${ROSE_VERSION}-intel-${INTEL_VERSION}.mpi
cd rose-${ROSE_VERSION}-intel-${INTEL_VERSION}.mpi

$ Below, edit ALL THREE versions to match:
cat > do_configure << EOF
#!/bin/bash
intel_version=${INTEL_VERSION}
boost_version=${BOOST_VERSION}
rose_repo="/g/g17/charles/code/ROSE/rose-${ROSE_VERSION}"

echo "CHECK ${rose_repo}/config/Makefile.for.ROSE.includes.and.libs line 264 looks like:"
echo "ROSE_INTEL_COMPILER_MATH_LIBS = -L/usr/tce/packages/intel/intel-${intel_version}/lib/intel64 -limf -lirng -lintlc -lsvml"
echo "If not, exit this script and do:"
echo "gedit ${rose_repo}/config/Makefile.for.ROSE.includes.and.libs"
echo ""
echo "CHECK that gcc is 4.9.x or later below:"
echo "If not, exit this script and do:"
echo "module load gcc/4.9.3"
gcc --version
echo ""
echo "CHECK that LD_LIBRARY_PATH doesn't have any non-gcc compiler paths in it."
echo "If not, exit this script and fix it."
echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"
echo ""
echo "CHECK that CC=/usr/tce/packages/intel/intel-${intel_version}/bin/icc below:"
echo "If not, exit this script and do:"
echo "export CC=/usr/tce/packages/intel/intel-${intel_version}/bin/icc"
echo "       CC=$CC"
echo ""
echo "CHECK that CXX=/usr/tce/packages/intel/intel-${intel_version}/bin/icc below:"
echo "If not, exit this script and do:"
echo "export CXX=/usr/tce/packages/intel/intel-${intel_version}/bin/icc"
echo "       CXX=$CXX"
echo ""
echo "DON'T run multiple configures using ${rose_repo} in parallel if they need different intel versions."
echo "Press Enter when done"; read
srun_do \
"${rose_repo}/configure" \
"--without-java" \
"--with-boost=/usr/tce/packages/boost/boost-${boost_version}-mvapich2-2.2-intel-${intel_version}" \
"--disable-boost-version-check" \
"--enable-edg_version=4.12" \
"--with-alternate_backend_Cxx_compiler=/usr/tce/packages/mvapich2/mvapich2-2.2-intel-${intel_version}/bin/mpicxx" \
"--with-alternate_backend_C_compiler=/usr/tce/packages/mvapich2/mvapich2-2.2-intel-${intel_version}/bin/mpicc" \
"--with-alternate_backend_fortran_compiler=/usr/tce/packages/mvapich2/mvapich2-2.2-intel-${intel_version}/bin/mpif77" \
EOF

module load gcc/4.9.3
export CC=/usr/tce/packages/intel/intel-${INTEL_VERSION}/bin/icc
run_and_log do_configure
srun_do -c36 run_and_log --use_first_parm make all -j36
srun_do -c36 run_and_log --use_first_parm make install -j36

