include $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs
EXTRA_DIST =

noinst_PROGRAMS = TestUnparseHeaders
TestUnparseHeaders_SOURCES = UnparseHeadersTransformVisitor.C TestUnparseHeaders.C
TestUnparseHeaders_CPPFLAGS = $(ROSE_INCLUDES)
TestUnparseHeaders_LDFLAGS = $(ROSE_RPATHS)
TestUnparseHeaders_LDADD = $(ROSE_LIBS)


# Test specimens are actually directories, each of which contains a ROSE Test Harness "config" file.
# TEST_SPECIMENS = test0 test1 test2 test3 test4 test5 test6 test7 test8 test9 test10 test11 test12 test13

# DQ (11/4/2019): With the header file optimization I only have the first 7 regression tests working (plus test_29.C for the tool).
# DQ (8/18/2019): Adding scalability testing (test15).
# TEST_SPECIMENS = test0 test1 test2 test3 test4 test5 test6 test7 test8 test9 test10 test11 test12 test13 test14 test15
# TEST_SPECIMENS = test0 test1 test2 test3 test4 test5 test6 test7 test8 test9 test10 test11 test12 test13 test14 test15

# DQ (11/22/2019): Currently working.
# TEST_SPECIMENS = test0 test1 test2 test3 test4 test5 test6 test7 
# TEST_SPECIMENS = test0 test1 test2 test3 test4 test5 test6 test7 test8 test9 test10
# TEST_SPECIMENS = test0 test1 test2 test3 test4 test5 test6 test7 test8 test9 test10 test14
# TEST_SPECIMENS = test11 test12 test13
# TEST_SPECIMENS = test13
TEST_SPECIMENS = test0 test1 test2 test3 test4 test5 test6 test7 test8 test9 test10 test11 test12 test13 test14

# DQ (6/27/2020): This is an original copy of test10 and uses a header 
# file twice, test10 is now modified to only use a header file once.
# test18

EXTRA_DIST += $(TEST_SPECIMENS) UnparseHeadersTransformVisitor.h

# DQ (11/2/2018): Test with -rose:unparse_tokens
# ROSE_SWITCHES = --edg:no_warnings --edg:restrict -w -rose:verbose 1 -rose:unparseHeaderFiles
# ROSE_SWITCHES = -DSKIP_ROSE_BUILTIN_DECLARATIONS --edg:no_warnings --edg:restrict -w -rose:verbose 1 -rose:unparseHeaderFiles 
# ROSE_SWITCHES = -DSKIP_ROSE_BUILTIN_DECLARATIONS --edg:no_warnings --edg:restrict -w -rose:verbose 1 -rose:unparseHeaderFiles -rose:unparse_tokens
# ROSE_SWITCHES = -DSKIP_ROSE_BUILTIN_DECLARATIONS --edg:no_warnings --edg:restrict -w -rose:verbose 1 -rose:unparseHeaderFiles -rose:unparse_tokens -c
# ROSE_SWITCHES = -DSKIP_ROSE_BUILTIN_DECLARATIONS --edg:no_warnings --edg:restrict -w -rose:verbose 0 -rose:unparseHeaderFiles -c
# ROSE_SWITCHES = --edg:no_warnings --edg:restrict -w -rose:verbose 0 -rose:unparseHeaderFiles -c

# DQ (10/27/2019): Modified to reflect better options.
ROSE_SWITCHES = --edg:no_warnings --edg:restrict -w -rose:verbose 0 -rose:unparseHeaderFiles -c

# -rose:outline:use_dlopen -rose:outline:copy_orig_file -rose:outline:temp_variable -I. -rose:outline:exclude_headers -rose:outline:output_path . -rose:unparseHeaderFiles -rose:unparseHeaderFilesRootFolder unparsedHeaders -rose:applicationRootDirectory /home/quinlan1/ROSE/git_rose_development/tests/nonsmoke/functional/CompileTests/UnparseHeadersTests/test0

# Working command line:
# rm -fr unparsedHeaders unparsedHeaders.; ../TestUnparseHeaders  -rose:verbose 0 -DXXXSKIP_ROSE_BUILTIN_DECLARATIONS -std=c++03 -fpermissive -c -rose:outline:use_dlopen -rose:outline:copy_orig_file -rose:outline:temp_variable -I. -rose:outline:exclude_headers -rose:outline:output_path . -rose:unparseHeaderFiles -rose:unparseHeaderFilesRootFolder unparsedHeaders -rose:applicationRootDirectory /home/quinlan1/ROSE/git_rose_development/tests/nonsmoke/functional/CompileTests/UnparseHeadersTests/test0 -I/home/quinlan1/ROSE/ROSE_GARDEN/codeSegregation /home/quinlan1/ROSE/git_rose_development/tests/nonsmoke/functional/CompileTests/UnparseHeadersTests/test0/Simple0.C -o /data1/ROSE_CompileTree/git-LINUX-64bit-6.1.0-EDG50-BOOST_1_60-dq-development-rc-cxx-only/tests/nonsmoke/functional/CompileTests/UnparseHeadersTests/test0/Simple0.o

HDR_ROOT_SWITCHES = -rose:unparseHeaderFilesRootFolder unparsedHeaders
APP_ROOT_SWITCHES = -rose:applicationRootDirectory $(srcdir)
# OUTLINER_SWITCHES = -rose:outline:use_dlopen -rose:outline:copy_orig_file -rose:outline:temp_variable -rose:outline:exclude_headers -rose:outline:output_path .
OUTLINER_SWITCHES = -rose:outline:use_dlopen -rose:outline:copy_orig_file -rose:outline:temp_variable -rose:outline:exclude_headers

# Test targets are the makefile targets upon which "make check" depends (via check-local). The directory in which the
# tests run needs to be recreated each time we run the test, or else the test will likely pick up the wrong header files: the
# ones generated by the previous run.
# TEST_TARGETS = $(addsuffix .passed, $(TEST_SPECIMENS))
# $(TEST_TARGETS): %.passed: $(srcdir)/% %/config TestUnparseHeaders
#	rm -rf "$(@:.passed=)"
#	mkdir -p "$(@:.passed=)"
#	$(RTH_RUN) ROSE_SWITCHES="$(ROSE_SWITCHES)" HDR_ROOT_SWITCHES="$(HDR_ROOT_SWITCHES)" "$</config" "$@"

TEST_TARGETS = $(addsuffix .passed, $(TEST_SPECIMENS))
$(TEST_TARGETS): %.passed: $(srcdir)/% %/config TestUnparseHeaders
	rm -rf "$(@:.passed=)"
	mkdir -p "$(@:.passed=)"
#	rm -fr unparsedHeaders unparsedHeaders.
	rm -rf _rose_unparsed_headers_
	echo "directory: $(@:.passed=)"
#	$(RTH_RUN) ROSE_SWITCHES="$(ROSE_SWITCHES)" OUTLINER_SWITCHES="$(OUTLINER_SWITCHES)" HDR_ROOT_SWITCHES="$(HDR_ROOT_SWITCHES)" APP_ROOT_SWITCHES="$(APP_ROOT_SWITCHES)" "$</config" "$@"
	$(RTH_RUN) ROSE_SWITCHES="$(ROSE_SWITCHES) $(OUTLINER_SWITCHES) $(APP_ROOT_SWITCHES)/$(@:.passed=)" HDR_ROOT_SWITCHES="$(HDR_ROOT_SWITCHES)" "$</config" "$@"

check-local: $(TEST_TARGETS)
	@echo "*****************************************************************************************************************************"
	@echo "****** ROSE/tests/nonsmoke/functional/CompileTests/UnparseHeadersTests: make check rule complete (terminated normally) ******"
	@echo "*****************************************************************************************************************************"

clean-local:
	rm -f $(MOSTLYCLEANFILES)
	rm -f $(TEST_TARGETS) $(TEST_TARGETS:.passed=.failed)
	rm -rf $(TEST_SPECIMENS)
